<index.html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>インタラクティブ注文書</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Chosen Palette: Warm Neutral -->
    <!-- Application Structure Plan: The application is designed as a digital, interactive version of the provided paper order form. The structure consists of a header with sender and order details (with selectable locations), a section for recipient and orderer information, and a main content area featuring a dynamic table for line items. This version introduces an auto-incrementing, but user-editable, order number using localStorage for persistence. A mail-to function triggers the number increment. -->
    <!-- Visualization & Content Choices: Interactive HTML form elements are used for data capture. Checkboxes with JS handle sender location selection. A dropdown is used for company selection. The order number is now a text input, pre-filled by a dynamic counter from localStorage, allowing user override while maintaining a persistent sequence for future orders. NO SVG/Mermaid is used. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Helvetica Neue', 'Arial', 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', 'Meiryo', sans-serif;
            background-color: #f8f7f5;
        }
        .form-input, .form-textarea, .form-select {
            border: 1px solid #d1d5db;
            padding: 0.5rem 0.75rem;
            border-radius: 0.375rem;
            width: 100%;
            transition: box-shadow 0.15s ease-in-out;
            background-color: #fff;
        }
        .form-input:focus, .form-textarea:focus, .form-select:focus {
            outline: none;
            box-shadow: 0 0 0 2px #a5b4fc;
            border-color: #6366f1;
        }
        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 600;
            color: white;
            transition: background-color 0.2s;
            cursor: pointer;
        }
        .btn-primary {
            background-color: #4f46e5;
        }
        .btn-primary:hover {
            background-color: #4338ca;
        }
        .btn-secondary {
            background-color: #16a34a;
        }
        .btn-secondary:hover {
            background-color: #15803d;
        }
        .btn-danger {
            background-color: #dc2626;
        }
        .btn-danger:hover {
            background-color: #b91c1c;
        }
        @media print {
            body {
                background-color: #ffffff;
            }
            .no-print {
                display: none;
            }
            .print-container {
                box-shadow: none;
                border: none;
                margin: 0;
                padding: 0;
                max-width: 100%;
            }
            .form-input, .form-textarea, .form-select {
                border: 1px solid transparent;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                padding-right: 0.75rem;
            }
            /* Print-friendly checkboxes */
            .printable-checkbox {
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
                border: 1px solid #374151; /* gray-700 */
                width: 1.1em;
                height: 1.1em;
                display: inline-block;
                vertical-align: middle;
                position: relative;
                color: #000;
            }
            .printable-checkbox:checked::before {
                content: '✓'; /* Checkmark character (レ) */
                font-size: 1.1em;
                font-weight: bold;
                color: #000;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                line-height: 1;
            }
            .print-table td, .print-table th {
                border: 1px solid #6b7280;
            }
            .print-header-bg {
                background-color: #e5e7eb !important;
                -webkit-print-color-adjust: exact;
                color-adjust: exact;
            }
        }
    </style>
</head>
<body class="text-gray-800">

    <div class="print-container container mx-auto max-w-4xl my-8 p-6 sm:p-10 bg-white rounded-lg shadow-lg border border-gray-200">

        <header class="flex flex-col sm:flex-row justify-between items-start pb-6 border-b-2 border-gray-800">
            <div class="w-full sm:w-2/3">
                <div class="flex justify-between items-baseline mb-4">
                    <h1 class="text-3xl font-bold text-gray-900 tracking-widest">　注　文　書</h1>
                    <div class="p-2 bg-gray-100 rounded-md flex items-center">
                        <span class="text-sm font-medium">注文No.</span>
                        <span class="text-lg font-bold ml-2">Y</span>
                        <input type="text" id="order-no-input" class="form-input text-lg font-bold w-24 text-center p-1 ml-1 border-gray-400">
                    </div>
                </div>
                
                <div class="mt-4 space-y-2">
                    <div class="flex items-baseline">
                        <select id="recipient-company" class="form-select text-lg font-bold w-52" required>
                            <option value="" disabled selected>会社名を選択</option>
                            <option>東レプラスチック</option>
                            <option>芝軽粗材</option>
                            <option>緑川化成</option>
                            <option>新興プラスチックス</option>
                            <option>北陸山宗</option>
                        </select>
                        <span class="ml-2 text-lg font-bold">御中</span>
                    </div>
                    <div class="flex items-baseline">
                        <input type="text" id="recipient-person" class="form-input text-lg w-52" placeholder="ご担当者名">
                        <span class="ml-2 text-lg font-bold">様</span>
                    </div>
                </div>
            </div>
            <div class="w-full sm:w-1/3 text-left mt-4 sm:mt-0">
                <h2 class="font-semibold mb-2 text-right">
                    <span class="text-3xl">SEPLA</span>
                    <span class="text-lg ml-1">セプラ株式会社</span>
                </h2>
                <div class="space-y-2 text-xs text-gray-600">
                    <div class="flex justify-start">
                        <label for="sender-honsha" class="flex items-start cursor-pointer">
                            <input type="checkbox" id="sender-honsha" name="sender-location-cb" class="printable-checkbox h-4 w-4 text-indigo-600 border-gray-400 rounded focus:ring-indigo-500 mr-2 mt-1" checked>
                            <div class="text-left">
                                <span class="font-semibold">本社</span>
                                <div class="text-xs text-gray-600">
                                    〒930-0873 富山県富山市金屋1634-8 TEL 076-431-8120 / FAX 076-431-8125
                                </div>
                            </div>
                        </label>
                    </div>
                    <div class="flex justify-start">
                         <label for="sender-daisan" class="flex items-start cursor-pointer">
                            <input type="checkbox" id="sender-daisan" name="sender-location-cb" class="printable-checkbox h-4 w-4 text-indigo-600 border-gray-400 rounded focus:ring-indigo-500 mr-2 mt-1">
                            <div class="text-left">
                                <span class="font-semibold">第三工場</span>
                                <div class="text-xs text-gray-600">
                                    〒930-0873 富山県富山市金屋1634-23 TEL 076-464-6991 / FAX 076-464-6992
                                </div>
                            </div>
                        </label>
                    </div>
                </div>
            </div>
        </header>

        <section class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
                <p class="text-sm">平素は大変お世話になっております。</p>
                <p class="text-sm">下記の商品を注文します。</p>
                <p class="text-sm">ご手配のほど宜しくお願い申し上げます。</p>
            </div>
            <div class="space-y-3">
                <div class="flex items-center">
                    <label for="order-date" class="w-24 text-sm font-medium">発行日:</label>
                    <input type="date" id="order-date" class="form-input">
                </div>
                <div class="flex items-center">
                    <label for="orderer" class="w-24 text-sm font-medium">発注者:</label>
                    <input type="text" id="orderer" placeholder="部署・ご担当者名" class="form-input" value="好美">
                </div>
            </div>
        </section>

        <main class="mt-8">
            <div class="overflow-x-auto">
                <table class="w-full text-left border-collapse print-table">
                    <thead>
                        <tr class="bg-gray-200 print-header-bg">
                            <th class="p-3 text-sm font-semibold tracking-wide border border-gray-400">品名</th>
                            <th class="p-3 text-sm font-semibold tracking-wide border border-gray-400 w-32">数量</th>
                            <th class="p-3 text-sm font-semibold tracking-wide border border-gray-400 w-24 no-print">操作</th>
                        </tr>
                    </thead>
                    <tbody id="item-list">
                        <!-- JS will populate this -->
                    </tbody>
                </table>
            </div>
            <div class="mt-4 text-right no-print">
                <button id="add-item-btn" class="btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    行を追加
                </button>
            </div>
        </main>
        
        <section class="mt-8">
             <label for="notes" class="text-sm font-medium">備考:</label>
             <textarea id="notes" rows="4" class="form-textarea mt-1"></textarea>
        </section>

        <footer class="mt-12 flex flex-col sm:flex-row justify-center items-center gap-4 no-print">
            <button id="send-email-btn" class="btn btn-secondary px-6 py-3 text-lg w-full sm:w-auto">
                 <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                </svg>
                メールで送信
            </button>
        </footer>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const itemList = document.getElementById('item-list');
            const addItemBtn = document.getElementById('add-item-btn');
            const sendEmailBtn = document.getElementById('send-email-btn');
            const honshaCheckbox = document.getElementById('sender-honsha');
            const daisanCheckbox = document.getElementById('sender-daisan');
            const orderNoInputEl = document.getElementById('order-no-input');
            const ORDER_COUNTER_KEY = 'seplaOrderCounter';

            function loadOrderNumber() {
                let counter = localStorage.getItem(ORDER_COUNTER_KEY);
                if (!counter) {
                    counter = 1; 
                }
                orderNoInputEl.value = String(counter).padStart(4, '0');
            }

            function handleCheckboxChange(event) {
                if (event.target === honshaCheckbox && honshaCheckbox.checked) {
                    daisanCheckbox.checked = false;
                } else if (event.target === daisanCheckbox && daisanCheckbox.checked) {
                    honshaCheckbox.checked = false;
                }
            }

            honshaCheckbox.addEventListener('change', handleCheckboxChange);
            daisanCheckbox.addEventListener('change', handleCheckboxChange);

            function createRow() {
                const tr = document.createElement('tr');
                tr.className = 'border-b border-gray-300';
                tr.innerHTML = `
                    <td class="p-2 border border-gray-400">
                        <input type="text" placeholder="品名・仕様" class="form-input w-full">
                    </td>
                    <td class="p-2 border border-gray-400">
                        <input type="number" min="1" placeholder="数量" class="form-input w-full text-center">
                    </td>
                    <td class="p-2 border border-gray-400 text-center no-print">
                        <button class="btn btn-danger btn-sm delete-btn">削除</button>
                    </td>
                `;
                itemList.appendChild(tr);
            }

            addItemBtn.addEventListener('click', createRow);

            itemList.addEventListener('click', function(e) {
                if (e.target && e.target.classList.contains('delete-btn')) {
                    const rowToRemove = e.target.closest('tr');
                    itemList.removeChild(rowToRemove);
                }
            });
            
            function setTodayDate() {
                const dateInput = document.getElementById('order-date');
                const today = new Date();
                const yyyy = today.getFullYear();
                const mm = String(today.getMonth() + 1).padStart(2, '0');
                const dd = String(today.getDate()).padStart(2, '0');
                dateInput.value = `${yyyy}-${mm}-${dd}`;
            }

            function sendEmail() {
                const companySelect = document.getElementById('recipient-company');
                const companyName = companySelect.value;
                const personName = document.getElementById('recipient-person').value;
                
                if (!companyName) {
                    alert('会社名を選択してください。');
                    return;
                }

                let recipientText = companyName + ' 御中';
                if (personName) {
                    recipientText += `\n${personName} 様`;
                }
                
                const orderNo = `Y${orderNoInputEl.value}`;

                const issueDate = document.getElementById('order-date').value;
                const orderer = document.getElementById('orderer').value || '(担当者名未入力)';
                const notes = document.getElementById('notes').value;
                
                const selectedLocationEl = document.querySelector('input[name="sender-location-cb"]:checked');
                let senderInfo = '(差出人未選択)';
                if (selectedLocationEl) {
                    const label = selectedLocationEl.closest('label').querySelector('.text-left');
                    senderInfo = label.innerText.replace(/\n/g, ' ');
                } else {
                     alert('差出人（本社または第三工場）を選択してください。');
                    return;
                }

                let itemsText = '';
                const rows = itemList.querySelectorAll('tr');
                rows.forEach((row, index) => {
                    const itemName = row.querySelector('input[type="text"]').value || '(品名未入力)';
                    const quantity = row.querySelector('input[type="number"]').value || '0';
                    itemsText += `品目 ${index + 1}:\n`;
                    itemsText += `  - 品名: ${itemName}\n`;
                    itemsText += `  - 数量: ${quantity}\n\n`;
                });

                let body = `以下の内容で注文いたします。\n\n`;
                body += `========================================\n`;
                body += `注文書\n`;
                body += `========================================\n\n`;
                body += `宛先:\n${recipientText}\n\n`;
                body += `注文No.: ${orderNo}\n`;
                body += `発行日: ${issueDate}\n`;
                body += `発注者: ${orderer}\n`;
                body += `差出人: SEPLA セプラ株式会社 ${senderInfo}\n\n`;
                body += `--- 注文内容 ---\n\n`;
                body += itemsText;
                body += `--- 備考 ---\n`;
                body += `${notes}\n\n`;
                body += `以上、よろしくお願い申し上げます。\n`;

                const recipientEmail = 'sepla_honsya4@selpa.jp';
                const subject = `【注文書】注文No. ${orderNo} / 発注者: ${orderer}`;
                
                const mailtoLink = `mailto:${recipientEmail}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;

                window.location.href = mailtoLink;

                // Increment and save the counter for the next order
                const currentCounter = parseInt(orderNoInputEl.value) || 0;
                const nextCounter = currentCounter + 1;
                localStorage.setItem(ORDER_COUNTER_KEY, nextCounter);
                orderNoInputEl.value = String(nextCounter).padStart(4, '0');
            }

            sendEmailBtn.addEventListener('click', sendEmail);

            // Initial setup
            loadOrderNumber();
            setTodayDate();
            createRow();
        });
    </script>
</body>
</html>